# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- master


pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  
steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Project2'
    organization: 'mtnolasco1'
    scannerMode: 'MSBuild'
    projectKey: 'YoutubeJam'
    projectName: 'YoutubeJam'
    extraProperties: |
      sonar.exclusions = **/lib/**

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '-c $(buildConfiguration) --collect "XPlat Code Coverage"'

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
- task: SonarCloudAnalyze@1
  displayName: Run code analysis

- task: SonarCloudPublish@1
  displayName: Publish code analysis

- task: DotNetCoreCLI@2
  displayName: dotnet publish + zip
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: true